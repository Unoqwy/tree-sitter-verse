===============================
'using' macro
===============================

using { /Github.com/Gost }

---

(source_file
  (macro_call
    (identifier)
    (block
      (path_literal))))

===============================
'using' macro with dot form
===============================

using. /Github.com/Gost

---

(source_file
  (macro_call
    (identifier)
    (block
      (path_literal))))

===============================
'option' macro
===============================

option{0}

---

(source_file
  (macro_call
    (identifier)
    (block
      (integer))))

===============================
Macro call parameter
===============================

class (supertype) {}

---

(source_file
  (macro_call
    macro: (identifier)
    arguments: (argument_list
      (identifier))
    (block)))

===============================
Macro call parameters
===============================

class (supertype, interface) {}

---

(source_file
  (macro_call
    macro: (identifier)
    arguments: (argument_list
      (identifier)
      (identifier))
    (block)))

===============================
Macro call parameters (indented block)
===============================

class (supertype, interface):

---

(source_file
  (macro_call
    macro: (identifier)
    arguments: (argument_list
      (identifier)
      (identifier))
    (block)))

===============================
Basic curly block
===============================

block {
  0
  1; 2
  3
}

---

(source_file
  (macro_call
    macro: (identifier)
    (block
      (integer)
      (integer)
      (integer)
      (integer))))

===============================
Nested curly block
===============================

block {
  1

  block {
    block {
      2
    }
  }

  3
}

---

(source_file
  (macro_call
    macro: (identifier)
    (block
      (integer)
      (macro_call
        macro: (identifier)
        (block
          (macro_call
            macro: (identifier)
            (block
              (integer)))))
      (integer))))

===============================
Basic indent block
===============================

block:
  0
  1; 2
  3

---

(source_file
  (macro_call
    macro: (identifier)
    (block
      (integer)
      (integer)
      (integer)
      (integer))))

===============================
Basic indent block exit
===============================

block:
  0
  1
2

---

(source_file
  (macro_call
    macro: (identifier)
    (block
      (integer)
      (integer)))
  (integer))

===============================
Nested indent block
===============================

block:
  1

  block:
    block:
      2

  3

---

(source_file
  (macro_call
    macro: (identifier)
    (block
      (integer)
      (macro_call
        macro: (identifier)
        (block
          (macro_call
            macro: (identifier)
            (block
              (integer)))))
      (integer))))

===============================
Nested indent block exit
===============================

block:
  block:
    block:
      1
2

---

(source_file
  (macro_call
    macro: (identifier)
    (block
      (macro_call
        macro: (identifier)
        (block
          (macro_call
            macro: (identifier)
            (block
              (integer)))))))
  (integer))

